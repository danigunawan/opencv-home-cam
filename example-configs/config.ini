
[recording]

# Option for enabling and disabling of recording
enable=1

# Path to directory where all recording will be stored
recording_dir=recordings

# The file base name of the recordings.
# Each created file will have a name according to the format:
# $recording_file_base%d.avi
recording_file_base=my_avi_dump

# The recording frame per seconds.
# This is how often images will be read from the input device.
# If the value exceeds the maximum fps supported by the recording
# device, the fps will be clamped to the maximum supported value.
fps=20

# The file limit of recording files.
# If the number of recordings exceeds this limit, old recordings will be
# removed.
file_limit=10

# The time limit in seconds of a recording.
# If the number of frames exceeds the time limit times fps, a new recording
# file will be created.
time_limit=30

# The camera ID that will be used by OpenCV to open the camera device.
# On systems with only one camera (built-in camera in laptops etc.) the
# ID is usually 0.
cam_id=0

[detection]

# These options are directly related to OpenCV's object detection
# functionality. They can safely be ignored unless the OpenCV detection
# algorithm is going to be tweaked (performance etc.)
#scale_factor=1.1
#min_neighbours=3
#size=3

# Haar cascade files (xml) that will be used by opencv in the detection.
# A comma separated list of files.
cascades=haar-cascades/haarcascade_upperbody.xml,haar-cascades/haarcascade_frontalface_default.xml

[action0]

# Action command.
# The script/program will be invoked as soon as the trigger condition
# is fulfilled.
# The script/program must not block indefinitely, since this will cause
# opencv-home-cam to block.
command=./example-actions/print-env.sh

# Cascade list associated with the action.
# A comma separated list of regular expressions.
cascades=.*frontalface.*

# Action script triggers.
# A comma separated list of triggers for the action.
# Default value is "detect"
triggers=detect,no-detect
